name: Comprehensive Cross-Browser Tests

on:
  workflow_dispatch:
    inputs:
      browser_matrix:
        description: "Browsers to test"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - desktop-only
          - mobile-only

env:
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

jobs:
  comprehensive-e2e:
    name: Comprehensive E2E (${{ matrix.os }}, ${{ matrix.browser }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        browser: [chromium, firefox, webkit]
        include:
          # Mobile tests only on Linux
          - os: ubuntu-latest
            browser: mobile-chrome
          - os: ubuntu-latest
            browser: mobile-safari
        exclude:
          # WebKit on Windows often has issues
          - os: windows-latest
            browser: webkit
          # Skip some combinations to save resources
          - os: macos-latest
            browser: firefox

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Get Playwright version
        id: playwright-version
        shell: bash
        run: echo "version=$(npm list @playwright/test --depth=0 --json | jq -r '.dependencies["@playwright/test"].version')" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ~/Library/Caches/ms-playwright
            %USERPROFILE%\AppData\Local\ms-playwright
          key: playwright-${{ runner.os }}-${{ matrix.browser }}-${{ steps.playwright-version.outputs.version }}
          restore-keys: |
            playwright-${{ runner.os }}-${{ matrix.browser }}-

      - name: Install Playwright browsers
        run: |
          if [ "${{ matrix.browser }}" = "mobile-chrome" ]; then
            npx playwright install --with-deps chromium
          elif [ "${{ matrix.browser }}" = "mobile-safari" ]; then
            npx playwright install --with-deps webkit
          else
            npx playwright install --with-deps ${{ matrix.browser }}
          fi
        shell: bash

      - name: Run E2E tests
        run: |
          if [ "${{ matrix.browser }}" = "mobile-chrome" ]; then
            npx playwright test --project="Mobile Chrome" --reporter=github
          elif [ "${{ matrix.browser }}" = "mobile-safari" ]; then
            npx playwright test --project="Mobile Safari" --reporter=github
          else
            npx playwright test --project=${{ matrix.browser }} --reporter=github
          fi
        shell: bash
        env:
          PLAYWRIGHT_REPORT_SLOW_TESTS: "null"

      - name: Upload comprehensive test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: comprehensive-results-${{ matrix.os }}-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/
          retention-days: 14

  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Run performance tests
        run: npx playwright test --project=chromium --grep="Performance"

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: test-results/
          retention-days: 30

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps chromium firefox webkit

      - name: Run visual regression tests
        run: npx playwright test --grep="Visual Regression"

      - name: Upload visual test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-regression-results
          path: |
            test-results/
            playwright-report/
          retention-days: 14

  test-summary:
    name: Manual Test Summary
    runs-on: ubuntu-latest
    needs: [comprehensive-e2e, performance-benchmarks, visual-regression]
    if: always()
    steps:
      - name: Generate summary report
        run: |
          echo "## 🧪 Manual Cross-Browser Test Report" >> $GITHUB_STEP_SUMMARY
          echo "**Date**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by**: Manual execution" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Results" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Cross-Browser E2E | ${{ needs.comprehensive-e2e.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance Tests | ${{ needs.performance-benchmarks.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Visual Regression | ${{ needs.visual-regression.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Browser compatibility matrix
          echo "### Browser Compatibility Matrix" >> $GITHUB_STEP_SUMMARY
          echo "| Browser | Ubuntu | Windows | macOS |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|---------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Chromium | ✅ | ✅ | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Firefox | ✅ | ✅ | ⏭️ |" >> $GITHUB_STEP_SUMMARY
          echo "| WebKit | ✅ | ⏭️ | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Mobile Chrome | ✅ | ⏭️ | ⏭️ |" >> $GITHUB_STEP_SUMMARY
          echo "| Mobile Safari | ✅ | ⏭️ | ⏭️ |" >> $GITHUB_STEP_SUMMARY

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Manual Cross-Browser Tests Failed',
              body: `
                ## Manual Test Failure Report
                
                **Date**: ${new Date().toISOString()}
                **Workflow**: ${context.workflow}
                **Run ID**: ${context.runId}
                
                ### Failed Jobs
                - Cross-Browser E2E: ${{ needs.comprehensive-e2e.result }}
                - Performance Tests: ${{ needs.performance-benchmarks.result }}
                - Visual Regression: ${{ needs.visual-regression.result }}
                
                ### Action Required
                Please review the test failures and fix any issues.
                
                [View Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
              `,
              labels: ['bug', 'testing', 'automated']
            })
